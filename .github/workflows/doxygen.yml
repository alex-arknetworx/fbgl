name: Generate Documentation

on:
  # Triggers the workflow on push events to the main branch
  push:
    branches: [ "main" ]
  
  # Triggers the workflow on pull request events to the main branch
  pull_request:
    branches: [ "main" ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # This ensures full history for all branches and tags
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jinja2 Pygments
          sudo apt-get update
          sudo apt-get install -y doxygen graphviz

      - name: Clone m.css
        run: |
          git clone https://github.com/mosra/m.css.git

      - name: Prepare Doxyfile
        run: |
          doxygen -g Doxyfile
          
          # Configure Doxyfile for m.css and project specifics
          sed -i 's/PROJECT_NAME.*=.*/PROJECT_NAME           = "fbgl"/g' Doxyfile
          sed -i 's/INPUT.*=.*/INPUT                  = README.md fbhl.h/g' Doxyfile
          sed -i 's/USE_MDFILE_AS_MAINPAGE.*=.*/USE_MDFILE_AS_MAINPAGE = README.md/g' Doxyfile
          sed -i 's/EXTRACT_ALL.*=.*/EXTRACT_ALL            = YES/g' Doxyfile
          sed -i 's/RECURSIVE.*=.*/RECURSIVE            = YES/g' Doxyfile
          sed -i 's/GENERATE_HTML.*=.*/GENERATE_HTML        = NO/g' Doxyfile
          sed -i 's/GENERATE_XML.*=.*/GENERATE_XML         = YES/g' Doxyfile

      - name: Generate Documentation with m.css
        run: |
          python3 m.css/documentation/doxygen.py Doxyfile

      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'documentation'
          
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4